server:
  port: ${PORT:31200}
spring:
  application:
    name: xc-service-manage-course
  data:
      mongodb:
        uri:  mongodb://root:123@localhost:27017
        database: xc_cms
  datasource:
    druid:
      url: jdbc:mysql://192.168.117.156:33306/xc_course?characterEncoding=utf-8
      username: root
      password: 123456
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000
mybatis:
  type-aliases-package:  com.xuecheng.framework.domain.course
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000 #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间
eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    prefer-same-zone-eureka: true
      #地区
    region: ${EUREKA_REGION:shanghai}
    availability-zones:
      shanghai: ${EUREKA_ZONE:zone-1,zone-2}
    service-url:
      zone-1: ${EUREKA_SERVER1:http://cys101:123456@eureka01:50101/eureka/,http://cys101:123456@eureka02:50102/eureka/}
      zone-2: ${EUREKA_SERVER2:http://cys101:123456@eureka03:50103/eureka/,http://cys101:123456@eureka04:50104/eureka/}
  instance:
    prefer-ip-address: true #将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port}:@project.version@ #指定实例id
    status-page-url: /actuator/info
    health-check-url-path: /actuator/health
    metadata-map:
      zone: ${EUREKA_ZONE_MY:zone-1}
